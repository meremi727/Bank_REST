services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - cards-network

  postgres:
    image: postgres:14
    ports:
      - "10000:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cards-network

volumes:
  postgres-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgres-volume

networks:
  cards-network:
    driver: bridge